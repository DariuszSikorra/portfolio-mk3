{"version":3,"sources":["assets/techIcons/reactIcon.svg","assets/contactIcons/linkedInRound.svg","assets/contactIcons/githubRound.svg","assets/contactIcons/mailRound.svg","assets/images/contact.jpg","assets/images/home.jpg","assets/images/interests.jpg","assets/images/projects.jpg","assets/images/pg.jpg","assets/techIcons/css3Icon.svg","assets/techIcons/graphQlIcon.svg","assets/techIcons/html5Icon.svg","assets/techIcons/jsIcon.svg","assets/techIcons/npmIcon.svg","assets/techIcons/reduxIcon.svg","assets/techIcons/sassIcon.svg","assets/techIcons/typescriptIcon.svg","components/navigation/navButton/navButton.jsx","components/contact/contact.jsx","components/home/home.jsx","components/interests/interests.jsx","components/projects/projects.jsx","components/summary/summary.jsx","assets/routes.jsx","components/technologies/technologies.jsx","components/navigation/navigation.jsx","components/errorPage/errorPage.jsx","components/main/main.jsx","assets/useRouter.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","NavButton","props","location","useLocation","useState","isSlideIn","setSlideIn","isClicked","setIsClicked","toggleSlide","locationShadow","useSpring","background","pathname","route","path","transform","slideText","margin","buttonComponent","div","className","onMouseOver","onMouseLeave","onClick","timer","setTimeout","clearTimeout","toggleMousePress","style","tabComponent","name","key","id","to","Contact","src","mailRound","alt","href","linkedInRound","githubRound","contact","Home","classname","reactIcon","home","Interests","interests","Projects","projects","Summary","pg","routes","component","exact","class","graphQlIcon","html5Icon","jsIcon","css3Icon","npmIcon","reduxIcon","sassIcon","typescriptIcon","Navigation","map","ErrorPage","Main","useContext","__RouterContext","useTransition","from","transformOrigin","enter","leave","item","App","bgPoints","bgAnimation","next","a","config","mass","tension","friction","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2161cd02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactIcon.c72def3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedInRound.e5289347.svg\";","module.exports = __webpack_public_path__ + \"static/media/githubRound.1baf7687.svg\";","module.exports = __webpack_public_path__ + \"static/media/mailRound.e470d905.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.f44435d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home.55b8b450.jpg\";","module.exports = __webpack_public_path__ + \"static/media/interests.8b748e55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/projects.4b74176d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pg.5b6fb535.jpg\";","module.exports = __webpack_public_path__ + \"static/media/css3Icon.62214d5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/graphQlIcon.e6990cd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/html5Icon.d22bcaa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/jsIcon.bbc5738c.svg\";","module.exports = __webpack_public_path__ + \"static/media/npmIcon.9885c6b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/reduxIcon.46f296b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sassIcon.639cffb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/typescriptIcon.a9381b05.svg\";","import React, { useState } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { useSpring, animated as a } from \"react-spring\";\r\n\r\nconst NavButton = props => {\r\n  let location = useLocation();\r\n  const [isSlideIn, setSlideIn] = useState(false);\r\n  const [isClicked, setIsClicked] = useState(true);\r\n\r\n  //This function determines whether the tab is ejected or not\r\n  const toggleSlide = () => {\r\n    isSlideIn ? setSlideIn(false) : setSlideIn(true);\r\n  };\r\n  //A function, that generates a push button animation\r\n  const toggleMousePress = () => {\r\n    setIsClicked(false);\r\n    const timer = setTimeout(() => {\r\n      setIsClicked(true);\r\n    }, 450);\r\n    return () => clearTimeout(timer);\r\n  };\r\n\r\n  //Animation of web navigation\r\n  const locationShadow = useSpring({\r\n    background:\r\n      location.pathname === props.route.path\r\n        ? \"rgb(140, 140, 140)\"\r\n        : \"rgb(255, 255, 255)\",\r\n    transform: isClicked ? \"scale(1)\" : \"scale(0.9)\"\r\n  });\r\n  //Animation of sliding tab\r\n  const slideText = useSpring({\r\n    margin: isSlideIn ? \"0 -180px\" : \"0 180px\",\r\n    background:\r\n      location.pathname === props.route.path\r\n        ? \"rgb(140, 140, 140)\"\r\n        : \"rgb(255, 255, 255)\"\r\n  });\r\n\r\n  const buttonComponent = (\r\n    <a.div\r\n      className=\"item__number\"\r\n      onMouseOver={() => toggleSlide()}\r\n      onMouseLeave={() => toggleSlide()}\r\n      onClick={() => toggleMousePress()}\r\n      // onTouchStart={() => toggleSlide()}\r\n      style={locationShadow}\r\n    >\r\n      <div className=\"number__link\"></div>\r\n    </a.div>\r\n  );\r\n\r\n  const tabComponent = (\r\n    <a.div className=\"item__text\" style={slideText}>\r\n      {props.route.name}\r\n    </a.div>\r\n  );\r\n\r\n  return (\r\n    <div key={props.route.id} className=\"nav__item\">\r\n      <NavLink key={props.route.id} to={props.route.path}>\r\n        {buttonComponent}\r\n      </NavLink>\r\n      {tabComponent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavButton;\r\n","import React from \"react\";\r\nimport \"./contact.scss\";\r\n\r\nimport linkedInRound from \"../../assets/contactIcons/linkedInRound.svg\";\r\nimport githubRound from \"../../assets/contactIcons/githubRound.svg\";\r\nimport mailRound from \"../../assets/contactIcons/mailRound.svg\";\r\nimport contact from \"../../assets/images/contact.jpg\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <>\r\n      <div className=\"main__textContainer main__textContainer--contact\">\r\n        <h1>Contact</h1>\r\n        <p>\r\n          Wanna get in touch or talk about a projects? Feel free to contact me:\r\n          <table>\r\n            <tr>\r\n              <th>\r\n                <div>\r\n                  <img src={mailRound} alt=\"email\" />\r\n                </div>\r\n              </th>\r\n              <th>\r\n                <div>\r\n                  <span>dariusz.sikorra@gmail.com</span>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                <a href=\"https://www.linkedin.com/in/dariuszsikorra\">\r\n                  <img src={linkedInRound} alt=\"linkedin\" />\r\n                </a>\r\n              </th>\r\n              <th>\r\n                <a href=\"https://www.linkedin.com/in/dariuszsikorra\">\r\n                  <span>https://www.linkedin.com/in/dariuszsikorra</span>\r\n                </a>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                <a id=\"link\" href=\"https://github.com/DariuszSikorra\">\r\n                  <img src={githubRound} alt=\"github\" />\r\n                </a>\r\n              </th>\r\n              <th>\r\n                <a id=\"link\" href=\"https://github.com/DariuszSikorra\">\r\n                  <span>https://github.com/DariuszSikorra</span>\r\n                </a>\r\n              </th>\r\n            </tr>\r\n          </table>\r\n        </p>\r\n      </div>\r\n      <div className=\"main__photoContainer main__photoContainer--contact\">\r\n        <img src={contact} alt=\"\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport \"./home.scss\";\r\nimport home from \"../../assets/images/home.jpg\"\r\nimport reactIcon from \"../../assets/techIcons/reactIcon.svg\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <div className=\"main__textContainer main__textContainer--home\">\r\n        <h1>Dariusz Sikorra</h1>\r\n        <p classname=\"textContainer--home__title\">\r\n          Front-end Developer React\r\n          <br />\r\n          <img src={reactIcon} className=\"title__spiningLogo\"alt=\"Spining React Icon\" ></img>\r\n        </p>\r\n      </div>\r\n      <div className=\"main__photoContainer main__photoContainer--home\">\r\n        <img src={home} alt=\"portrait\"/>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport interests from \"../../assets/images/interests.jpg\"\r\n\r\nconst Interests = () => {\r\n  return (\r\n    <>\r\n      <div className=\"main__textContainer main__textContainer--interests\">\r\n        <h1>Interests</h1>\r\n        <p>\r\n          My passion are mountains, in my spare time when I'm not working on my\r\n          projects I am looking for travel opportunities. I love spring and\r\n          winter journeys, walking and cycling in the mountains. I love to\r\n          admire the views and put myself on more and more difficult challenges.\r\n        </p>\r\n      </div>\r\n      <div className=\"main__photoContainer main__photoContainer--interests\">\r\n        <img src={interests} alt=\"\"/>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Interests;\r\n","import React from \"react\";\r\nimport \"./projects.scss\"\r\n\r\nimport projects from \"../../assets/images/projects.jpg\"\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <>\r\n      <div className=\"main__textContainer main__textContainer--projects\">\r\n        <h1>Projects</h1>\r\n        <p>\r\n          I write frontend applications in the React.js environment, using the\r\n          latest solutions. I use libraries such as react-router-dom,\r\n          react-spring and many others (depending on the given project). I am\r\n          currently learning to implement technologies such as:\r\n          <ul> \r\n            <li>Typescript</li>\r\n            <li>GraphQl</li>\r\n            <li>Redux</li>\r\n          </ul>\r\n        </p>\r\n      </div>\r\n      <div className=\"main__photoContainer main__photoContainer--projects\">\r\n        <img src={projects} alt=\"\"/>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport \"./summary.scss\"\r\nimport pg from \"../../assets/images/pg.jpg\"\r\n\r\nconst Summary = () => {\r\n  return (\r\n    <>\r\n      <div className=\"main__textContainer main__textContainer--summary\">\r\n        <h1>Summary</h1>\r\n        <p>\r\n          I graduated from Gdańsk University of Technology in the{\" \"}\r\n          <strong>field of physics</strong>. I started my programming{\" \"}\r\n          <strong>adventure</strong> during studies by using C++, creating a\r\n          simulations of heat flow in solid bodies. I am looking for\r\n          opportunities to learn in a <strong>professional</strong> development\r\n          environment as a front-end developer. My goal is to become a front-end\r\n          developer using the <strong>latest</strong> technologies.\r\n        </p>\r\n      </div>\r\n      <div className=\"main__photoContainer main__photoContainer--summary\">\r\n        <img src={pg} alt=\"Gdańsk University of Technology\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import Contact from \"../components/contact/contact\";\r\nimport Home from \"../components/home/home\";\r\nimport Interests from \"../components/interests/interests\";\r\nimport Projects from \"../components/projects/projects\";\r\nimport Summary from \"../components/summary/summary\";\r\nimport Technologies from \"../components/technologies/technologies\";\r\n\r\nexport const routes = [\r\n  {\r\n    id: 1,\r\n    name: \"Home\",\r\n    path: \"/\",\r\n    component: Home,\r\n    exact: true\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Summmary\",\r\n    path: \"/summary\",\r\n    component: Summary,\r\n    exact: false\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Technologies\",\r\n    path: \"/technologies\",\r\n    component: Technologies,\r\n    exact: false\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Interests\",\r\n    path: \"/interests\",\r\n    component: Interests,\r\n    exact: false\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Projects\",\r\n    path: \"/projects\",\r\n    component: Projects,\r\n    exact: false\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Contact\",\r\n    path: \"/contact\",\r\n    component: Contact,\r\n    exact: false\r\n  }\r\n];\r\n","import React from \"react\";\r\n\r\nimport \"./technologies.scss\";\r\n\r\nimport css3Icon from \"../../assets/techIcons/css3Icon.svg\";\r\nimport graphQlIcon from \"../../assets/techIcons/graphQlIcon.svg\";\r\nimport html5Icon from \"../../assets/techIcons/html5Icon.svg\";\r\nimport jsIcon from \"../../assets/techIcons/jsIcon.svg\";\r\nimport npmIcon from \"../../assets/techIcons/npmIcon.svg\";\r\nimport reactIcon from \"../../assets/techIcons/reactIcon.svg\";\r\nimport reduxIcon from \"../../assets/techIcons/reduxIcon.svg\";\r\nimport sassIcon from \"../../assets/techIcons/sassIcon.svg\";\r\nimport typescriptIcon from \"../../assets/techIcons/typescriptIcon.svg\";\r\n\r\nconst Technologies = () => {\r\n  return (\r\n    <>\r\n      <div className=\"main__textContainer main__textContainer--technologies\">\r\n        <h1>Technologies</h1>\r\n        <p>\r\n          I am a novice developer constantly broadening my horizons. Here are\r\n          the main technologies I use:\r\n          <br />\r\n          <br/>\r\n          <table>\r\n            <tr>\r\n              <th>Front-end</th>\r\n              <th>Design</th>\r\n              <th>Dev Tools</th>\r\n            </tr>\r\n            <tr>\r\n              <td>HTML</td>\r\n              <td>Css and Sass</td>\r\n              <td>npm</td>\r\n            </tr>\r\n            <tr>\r\n              <td>JavaScript ES6+</td>\r\n              <td>Bootstrap</td>\r\n              <td>Chrome Dev Tools</td>\r\n            </tr>\r\n            <tr>\r\n              <td>React.js</td>\r\n              <td>Adobe Photoshop</td>\r\n              <td>GIT</td>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              <td>AutoCAD for 3D</td>\r\n              <td></td>\r\n            </tr>\r\n          </table>\r\n          <br/>\r\n          I am intrested in all technologies that can improve my workflow.\r\n        </p>\r\n      </div>\r\n      <div className=\"main__photoContainer main__photoContainer--technologies\">\r\n        <ul class=\"circle-container\">\r\n          <li>\r\n            <img src={reactIcon} alt=\"...\" />\r\n          </li>\r\n          <li>\r\n            <img src={graphQlIcon} alt=\"...\" />\r\n          </li>\r\n          <li>\r\n            <img src={html5Icon} alt=\"...\" />\r\n          </li>\r\n          <li>\r\n            <img src={jsIcon} alt=\"...\" />\r\n          </li>\r\n          <li>\r\n            <img src={css3Icon} alt=\"...\" />\r\n          </li>\r\n          <li>\r\n            <img src={npmIcon} alt=\"...\" />\r\n          </li>\r\n          <li>\r\n            <img src={reduxIcon} alt=\"...\" />\r\n          </li>\r\n          <li>\r\n            <img src={sassIcon} alt=\"...\" />\r\n          </li>\r\n          <li>\r\n            <img src={typescriptIcon} alt=\"...\" />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Technologies;","import React from \"react\";\r\n\r\nimport NavButton from \"./navButton/navButton\";\r\n\r\nimport { routes } from \"../../assets/routes\";\r\n\r\nimport \"./navigation.scss\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"app__nav\">\r\n      {routes.map(route => (\r\n        <NavButton route={route} />\r\n      ))}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react'\r\n\r\nconst ErrorPage = () => {\r\n    return ( <h1>This site does not exist</h1> );\r\n}\r\n \r\nexport default ErrorPage;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useTransition, animated as a } from \"react-spring\";\r\nimport useRouter from \"../../assets/useRouter\";\r\nimport \"./main.scss\"\r\n\r\nimport { routes } from \"../../assets/routes\";\r\n\r\nimport ErrorPage from \"../errorPage/errorPage\";\r\n\r\nconst Main = () => {\r\n  const { location } = useRouter();\r\n  const transitionAnimation = useTransition(\r\n    location,\r\n    location => location.pathname,\r\n    // {\r\n    //   from: { transform: \"translate3d(0,-100vh,0)\" },\r\n    //   enter: { transform: \"translate3d(0,0px,0)\" },\r\n    //   leave: { transform: \"translate3d(0,100vh,0)\" },\r\n    // }\r\n    {\r\n      from: { transform: \"rotate(-90deg)\", transformOrigin: \"bottom left\" },\r\n      enter: { transform: \"rotate(0deg)\", transformOrigin: \"bottom left\" },\r\n      leave: { transform: \"rotate(-90deg)\", transformOrigin: \"bottom right\" },\r\n    }\r\n  );\r\n\r\n  return transitionAnimation.map(({ item, props, key }) => (\r\n    <a.div className=\"app__main\" key={key} style={props}>\r\n      <Switch location={item}>\r\n        {routes.map(route => (\r\n          <Route\r\n            key={route.id}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            component={route.component}\r\n          />\r\n        ))}\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    </a.div>\r\n  ));\r\n};\r\n\r\nexport default Main;\r\n","import { useContext } from 'react'\r\nimport { __RouterContext } from 'react-router-dom'\r\n\r\nexport default function useRouter() {\r\n  return useContext(__RouterContext)\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useSpring, animated as a } from \"react-spring\";\n\nimport \"./App.scss\";\nimport Navigation from \"./components/navigation/navigation\";\nimport Main from \"./components/main/main\";\n\nfunction App() {\n  const bgPoints = {\n    startingPoint:\n      \"linear-gradient(-35deg, black 10%, rgb(73, 73, 73) 10% 20%, rgb(112, 112, 112) 20% 30%, rgb(140, 140, 140) 30% 40%, white 40%)\",\n    endingPoint:\n      \"linear-gradient(-35deg, black 8%, rgb(73, 73, 73) 8% 22%, rgb(112, 112, 112) 22% 28%, rgb(140, 140, 140) 28% 41%, white 40.5%)\"\n  };\n  const bgAnimation = useSpring({\n    from: {\n      background: bgPoints.startingPoint\n    },\n    to: async next => {\n      while (1) {\n        await next({\n          background: bgPoints.endingPoint\n        });\n        await next({\n          background: bgPoints.startingPoint\n        });\n      }\n    },\n    config: { mass: 5, tension: 100, friction: 10 }\n  });\n\n  return (\n    <Router>\n      <a.div className=\"app\" style={bgAnimation}>\n        <Navigation />\n        <Main />\n      </a.div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}